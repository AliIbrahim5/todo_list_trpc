import type { NextPage } from "next";
import Head from "next/head";
import { trpc } from "../utils/trpc";
import { useEffect, useState } from "react";
import { prisma } from "@prisma/client";
import { log } from "console";
import Swal from "sweetalert2";
import { string } from "zod";
import { utimesSync } from "fs";
const Home: NextPage = () => {
  // const [todo, setTodo] = useState([]);

  const todos = trpc.useQuery(["todo.get"]);
  const add = trpc.useMutation("todo.AddTodo");
  const update = trpc.useMutation("todo.update");
  const deleted = trpc.useMutation("todo.delete");


  const addTodo = async (e): object => {
    e.preventDefault();
   const addd = await { name: e.target.name.value, dec: e.target.dec.value}
    add.mutate(addd);
  };

  const updateTodo = async (e): object => {
    const filtered = await todos?.data?.todos.filter((todo) => {
      if (todo.id === e.id) {
        return (
          (todo.name = prompt("Enter your name")),
          (todo.dec = prompt("Enter your dec"))
        );
      }
    });

    update.mutate(filtered[0]);
  };

  const deleteTodo = async (e): object => {
     const del = await todos?.data?.todos.filter((item) => item.id !== e);
    
      deleted.mutate(e)
     
    
  };

  return (
    <div className=" bg-gray-300">
      <Head>
        <title>Create T3 App</title>
        <meta name="description" content="Generated by create-t3-app" />
        <link rel="icon" href="/favicon.ico" />
      </Head>

      <div className="h-100 w-full flex items-center justify-center bg-teal-lightest font-sans">
        <div className="bg-gray-200 rounded shadow p-6 m-4 w-full lg:w-3/4 lg:max-w-lg">
          <form onSubmit={addTodo}>
            <div className="mb-4">
              <h1 className="text-grey-darkest">Todo List</h1>
              <div className="flex mt-4">
                <input
                  name="name"
                  className="shadow appearance-none border rounded w-full py-2 px-3 mr-4 text-grey-darker"
                  placeholder="Add name"
                />

                <input
                  name="dec"
                  className="shadow appearance-none border rounded w-full py-2 px-3 mr-4 text-grey-darker"
                  placeholder="Add dec"
                />
                <button
                  className="flex-no-shrink p-2 border-2 rounded text-teal border-teal bg-zinc-600 hover:text-white hover:bg-teal"
                  type="submit"
                >
                  Add
                </button>
              </div>
            </div>
          </form>

          <div>
            {todos?.data?.todos?.map((e) => {
              return (
                <div className="flex mb-4 items-center">
               
                  <p className=" flex  w-full text-grey-darkest  ">{e.name}</p>
                  <p className=" flex  w-full text-grey-darkest">{e.dec}</p>
                 
                  <button
                    onClick={() => updateTodo(e)}
                    className="flex-no-shrink p-2 ml-2 border-2 rounded text-red border-red  hover:text-red-200  bg-gray-400"
                  >
                    update
                  </button>
                  <button
                    key={null}
                    onClick={() => deleteTodo(e)}
                    className="flex-no-shrink p-2 ml-2 border-2 rounded text-red border-red hover:text-gray-500 hover:bg-red  bg-red-500"
                  >
                    delete
                  </button>
                </div>
              );
            })}
          </div>
        </div>
      </div>
    </div>
  );
};



export default Home;
